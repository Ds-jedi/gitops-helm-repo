spec:
  service_name: &service_name "ml-app"

ml_app:
  deployment:
    replicaCount: 1
    image:
      repository: 12133132133.dkr.ecr.ap-south-1.amazonaws.com/ml-app
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "070e89a-366"
    resources:
      limits:
        cpu: "400m"
        memory: "500Mi"
      requests:
        cpu: "50m"
        memory: "100Mi"
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  service:
    name: *service_name
    app: *service_name
    targetport: 80

  probes:
   readinessProbe:
      path: /
      port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
   livenessProbe:
      path: /
      initialDelaySeconds: 5
      periodSeconds: 5
      port: 80


  ingress:
    enabled: true
    host: nginx-stage.devops-labs.online
    path: /
    pathType: Prefix
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/group.name: my-common-alb
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:ap-south-1:352352353525253:certificate/gfdg43434-2322-235r-2325-34tgg32321'
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '60'
      alb.ingress.kubernetes.io/healthcheck-path: '/'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '30'
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/scheme: 'internet-facing'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/tags: Environment=stage
